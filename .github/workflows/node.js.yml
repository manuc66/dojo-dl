# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [19.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm install
    - run: npm run build --if-present
    - run: npm test
  build-linux-se:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install
      - run: npm run single-build
      - run: node --experimental-sea-config sea-config.json
      - run: cp $(command -v node) dojo-dl
      - run: npx postject dojo-dl NODE_SEA_BLOB sea-prep.blob --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2 --overwrite
      - uses: actions/upload-artifact@v4.6.2
        with:
          name: dojo-dl-linux-x64
          path: dojo-dl
  build-windows-se:
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [ 20.x ]
    steps:
      - name: Setup code sign environment
        run: |
          echo "$(Split-Path -Path $(Get-ChildItem -Path "${env:ProgramFiles(x86)}\Windows Kits\10\App Certification Kit\signtool.exe"))" >> $env:GITHUB_PATH
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install
      - run: npm run single-build
      - run: node --experimental-sea-config sea-config.json
      - run: node -e "require('fs').copyFileSync(process.execPath, 'dojo-dl.exe')"
      - run: signtool remove /s dojo-dl.exe
      - run: npx postject dojo-dl.exe NODE_SEA_BLOB sea-prep.blob --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2 --overwrite
      #- run: signtool remove /s dojo-dl.exe # A certificate needs to be present for this to work. However, the unsigned binary would still be runnable.
      - uses: actions/upload-artifact@v4.6.2
        with:
          name: dojo-dl-window-x64
          path: dojo-dl.exe